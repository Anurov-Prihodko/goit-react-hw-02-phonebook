{"version":3,"sources":["components/TodoList/TodoList.module.css","components/TodoEditor/TodoEditor.js","components/TodoList/TodoList.js","components/Filter/Filter.js","App.js","index.js","components/TodoEditor/TodoEditor.module.css"],"names":["module","exports","TodoEditor","state","message","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","s","todoEditor","this","onChange","textarea","type","button","Component","TodoList","todos","onDeleteTodo","onTogleCompleted","todoList","map","id","text","completed","classNames","item","checkbox","checked","pug","onClick","Filter","App","contacts","number","filter","addTodo","todo","shortid","generate","deleteTodo","todoId","prevState","togleCompleted","hangeFilter","getVisibleTodos","normalizedFilter","toLocaleLowerCase","includes","getCompletedTodoCount","reduce","acc","visibleTodos","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19c78fc8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList\":\"TodoList_todoList__1ghZc\",\"item\":\"TodoList_item__lKdft\",\"completed\":\"TodoList_completed__1P2AL\",\"pug\":\"TodoList_pug__3t9Js\",\"text\":\"TodoList_text__1QiMY\",\"checkbox\":\"TodoList_checkbox__1jH6o\"};","import React, { Component } from 'react';\nimport s from './TodoEditor.module.css';\n\nclass TodoEditor extends Component {\n  state = {\n    message: '',\n  };\n\n  handleChange = e => {\n    this.setState({ message: e.currentTarget.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state.message);\n\n    this.setState({ message: '' });\n  };\n\n  render() {\n    return (\n      <form className={s.todoEditor} onSubmit={this.handleSubmit}>\n        <textarea\n          value={this.state.message}\n          onChange={this.handleChange}\n          className={s.textarea}\n        ></textarea>\n        <button type=\"submit\" className={s.button}>\n          Сохранить\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default TodoEditor;\n","import React from 'react';\nimport classNames from 'classnames';\nimport s from '././TodoList.module.css';\n\nconst TodoList = ({ todos, onDeleteTodo, onTogleCompleted }) => (\n  <ul className={s.todoList}>\n    {todos.map(({ id, text, completed }) => (\n      <li key={id} className={classNames(s.item, { [s.completed]: completed })}>\n        <input\n          type=\"checkbox\"\n          className={s.checkbox}\n          checked={completed}\n          onChange={() => onTogleCompleted(id)}\n        />\n        <p className={s.text}>{text}</p>\n        <button\n          type=\"button\"\n          className={s.pug}\n          onClick={() => onDeleteTodo(id)}\n        >\n          Удалить\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default TodoList;\n","import React from 'react';\n\nconst Filter = ({ value, onChange }) => (\n  <label>\n    Фильтр по имени\n    <input type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\n\nimport TodoEditor from './components/TodoEditor';\nimport TodoList from './components/TodoList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    // contacts: [\n    //   { id: 'id-1', name: 'Pug Friend' },\n    //   { id: 'id-2', name: 'Mops Love' },\n    // ],\n    // name: '',\n\n    contacts: [\n      {\n        id: 'id-1',\n        text: 'Выучить основы React',\n        number: '459-12-56',\n        completed: false,\n      },\n      { id: 'id-2', text: 'Разобраться с React Router', completed: false },\n      { id: 'id-3', text: 'Пережить Redux', completed: false },\n      { id: 'id-4', text: 'Попробовать React Hooks', completed: false },\n    ],\n    filter: '',\n  };\n\n  addTodo = ({ text, number }) => {\n    const todo = {\n      id: shortid.generate(),\n      text,\n      number,\n      completed: false,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [todo, ...contacts],\n    }));\n  };\n\n  deleteTodo = todoId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(todo => todo.id !== todoId),\n    }));\n  };\n\n  togleCompleted = todoId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.map(todo =>\n        todo.id === todoId ? { ...todo, completed: !todo.completed } : todo,\n      ),\n    }));\n  };\n\n  hangeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleTodos = () => {\n    const { contacts, filter } = this.state;\n\n    const normalizedFilter = filter.toLocaleLowerCase();\n\n    return contacts.filter(todo =>\n      todo.text.toLocaleLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  getCompletedTodoCount = () => {\n    const { contacts } = this.state;\n\n    return contacts.reduce((acc, todo) => (todo.completed ? acc + 1 : acc), 0);\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    // const totalTodosCount = todos.length;\n    // const completeTodosCount = this.getCompletedTodoCount();\n    const visibleTodos = this.getVisibleTodos();\n\n    return (\n      <>\n        {/* <div>\n          <p>Всего: {totalTodosCount}</p>\n          <p>Ко-во выполненных: {completeTodosCount} </p>\n        </div> */}\n\n        <TodoEditor onSubmit={this.addTodo} />\n        <TodoEditor onSubmit={this.addTodo} />\n        <Filter value={filter} onChange={this.hangeFilter} />\n        <TodoList\n          todos={visibleTodos}\n          onDeleteTodo={this.deleteTodo}\n          onTogleCompleted={this.togleCompleted}\n        />\n      </>\n    );\n  }\n}\n\n// const App = () => (\n//   <>\n//     {/* <ColorPicker options={colorPickerOptions} /> */}\n//     {/* <hr />\n//     <Dropdown />\n//     <hr />\n//     <Feedback /> */}\n//   </>\n// );\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// ========================================\n// // import { string } from 'prop-types';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoEditor\":\"TodoEditor_todoEditor__2tz8A\",\"textarea\":\"TodoEditor_textarea__VwwuV\",\"button\":\"TodoEditor_button__13976\"};"],"sourceRoot":""}